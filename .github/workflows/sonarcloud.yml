# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

# This workflow helps you trigger a SonarCloud analysis of your code and populates
# GitHub Code Scanning alerts with the vulnerabilities found.
# Free for open source project.

# 1. Login to SonarCloud.io using your GitHub account

# 2. Import your project on SonarCloud
#     * Add your GitHub organization first, then add your repository as a new project.
#     * Please note that many languages are eligible for automatic analysis,
#       which means that the analysis will start automatically without the need to set up GitHub Actions.
#     * This behavior can be changed in Administration > Analysis Method.
#
# 3. Follow the SonarCloud in-product tutorial
#     * a. Copy/paste the Project Key and the Organization Key into the args parameter below
#          (You'll find this information in SonarCloud. Click on "Information" at the bottom left)
#
#     * b. Generate a new token and add it to your Github repository's secrets using the name SONAR_TOKEN
#          (On SonarCloud, click on your avatar on top-right > My account > Security
#           or go directly to https://sonarcloud.io/account/security/)

# Feel free to take a look at our documentation (https://docs.sonarcloud.io/getting-started/github/)
# or reach out to our community forum if you need some help (https://community.sonarsource.com/c/help/sc/9)

name: SonarCloud

on:
  push:
    branches: [ "main", "develop" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

permissions:
  pull-requests: read # allows SonarCloud to decorate PRs with analysis results

env:
  PROJECT_KEY: renandpf_sgr-pagamento
  PROJECT_NAME: sgr-pagamento
  SONAR_HOST: https://sonarcloud.io
  SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
  

jobs:
  Analysis:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
        with:
          # Disabling shallow clone is recommended for improving relevancy of reporting
          fetch-depth: 0      
      - name: Set up JDK 18
        uses: actions/setup-java@v3
        with:
          java-version: '18'
          distribution: 'temurin'
          cache: maven

      - name: Verify
        run: |
          export MAVEN_OPTS="
          -Dsonar.qualitygate.wait=true 
          -Dsonar.organization=renandpf 
          -Dsonar.projectKey=${{ env.PROJECT_KEY }} 
          -Dsonar.projectName=${{ env.PROJECT_NAME }} 
          -Dsonar.host.url=${{ env.SONAR_HOST }} 
          -Dsonar.token=${{ env.SONAR_TOKEN }}
          -Dsonar.coverage.exclusions=src/main/java/br/com/pupposoft/fiap/SgrPagamentoService.java, src/main/java/br/com/pupposoft/fiap/sgr/pagamento/adapter/external/PlataformaPagamentoMockGateway.java, src/main/java/br/com/pupposoft/fiap/sgr/pagamento/adapter/external/PlataformaPagamentoPagSeguroGateway.java, src/main/java/br/com/pupposoft/fiap/sgr/**dto**/**/*
          
          "
          mvn clean verify sonar:sonar